name: cicd-demo

on:
  push:
    branches:
      - '*'

env:
  OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
  OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
  OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
  OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
  OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest

    steps:
      - name: Start build job
        run: echo "Starting the build job."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.2.1
        id: get-ocir-repository
        with:
          name: "novirepo/mojrepo"
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: oracle
          java-version: 17

      - name: Assemble JAR
        run: mvn package

      - name: Docker build
        run: docker build -t fra.ocir.io/frvwt5kzjktn/node-lab/hostname-app:latest

      - name: Docker push
        run: docker push fra.ocir.io/frvwt5kzjktn/node-lab/hostname-app:latest

  deploy-job:
    needs: build-job
    runs-on: ubuntu-latest

    steps:
      - name: Start deploy job
        run: echo "Starting the deploy job."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.3.2
        id: kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}

      - name: Run Kubectl
        run: kubectl apply -f spring-app.yaml

